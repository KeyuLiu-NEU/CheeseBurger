/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliners.ManageFlights;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Airplane;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Keyu Liu
 */
public class ManageFlightsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightsJPanel
     */
    private JPanel CardSequenceJPanel;
    private Airliner airliner;
    private AirlinerDirectory airlinerDirectory;
    
    public ManageFlightsJPanel(JPanel CardSequenceJPanel,AirlinerDirectory airlinerDirectory, Airliner airliner) {
        this.CardSequenceJPanel = CardSequenceJPanel;
        this.airliner = airliner;
        this.airlinerDirectory = airlinerDirectory;
        initComponents();
        populateAirplaneTable();
    }
    
    public void populateAirplaneTable(){
        DefaultTableModel dtm = (DefaultTableModel) tblAirplane.getModel();
        dtm.setRowCount(0);
        
        if(airliner.getAirplaneDirectory().isEmpty()){
            return;
        }
        
        for(Airplane airplane: airliner.getAirplaneDirectory()){
            Object[] row = new Object[6];
            row[0] = airplane;
            row[1] = airplane.getDepartureLocation() ;
            row[2] = airplane.getArrivalLocation();
            row[3] = airplane.getPreferTime() ;
            row[4] = airplane.getArrivalDate();
            row[5] = airplane.getDepartureDate();
            dtm.addRow(row);
        }
    }
    
    public void populateAirplaneTable(Airliner airliner){
        DefaultTableModel dtm = (DefaultTableModel) tblAirplane.getModel();
        dtm.setRowCount(0);
        
        if(airliner.getAirplaneDirectory().isEmpty()){
            return;
        }
        
        for(Airplane airplane: airliner.getAirplaneDirectory()){
            Object[] row = new Object[6];
            row[0] = airplane;
            row[1] = airplane.getDepartureLocation() ;
            row[2] = airplane.getArrivalLocation();
            row[3] = airplane.getPreferTime() ;
            row[4] = airplane.getArrivalDate();    
            row[5] = airplane.getDepartureDate();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        AbsoluteLayoutJPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtAirlinerName = new javax.swing.JTextField();
        btnManageFlights = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        CardSequenceForFlightJPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAirplane = new javax.swing.JTable();
        btnViewFlight = new javax.swing.JButton();
        btnNewFlight = new javax.swing.JButton();

        AbsoluteLayoutJPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Arial", 1, 15)); // NOI18N
        jLabel1.setText("Ariliner name :");
        AbsoluteLayoutJPanel.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 34, 149, 63));
        AbsoluteLayoutJPanel.add(txtAirlinerName, new org.netbeans.lib.awtextra.AbsoluteConstraints(14, 104, 149, 44));

        btnManageFlights.setText("Manage Flights");
        btnManageFlights.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnManageFlightsActionPerformed(evt);
            }
        });
        AbsoluteLayoutJPanel.add(btnManageFlights, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 158, 66));

        btnBack3.setText("Back ->");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });
        AbsoluteLayoutJPanel.add(btnBack3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 540, 100, 36));

        jSplitPane1.setLeftComponent(AbsoluteLayoutJPanel);

        CardSequenceForFlightJPanel.setLayout(new java.awt.CardLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(792, 596));

        tblAirplane.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Flight Number", "Departure Location", "Arrival Location", "Preferred Time", "Arrival Date", "Departure Date"
            }
        ));
        jScrollPane1.setViewportView(tblAirplane);

        btnViewFlight.setText("View Flight");
        btnViewFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFlightActionPerformed(evt);
            }
        });

        btnNewFlight.setText("New flight");
        btnNewFlight.setPreferredSize(new java.awt.Dimension(30, 29));
        btnNewFlight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewFlightActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(btnNewFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 270, Short.MAX_VALUE)
                .addComponent(btnViewFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewFlight, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        CardSequenceForFlightJPanel.add(jPanel1, "card2");

        jSplitPane1.setRightComponent(CardSequenceForFlightJPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewFlightActionPerformed
        // TODO add your handling code here:
        CreateNewFlightJPanel panel = new CreateNewFlightJPanel(CardSequenceForFlightJPanel,airliner);
        CardSequenceForFlightJPanel.add("CreateNewFlightJPanel", panel);
        CardLayout layout = (CardLayout) CardSequenceForFlightJPanel.getLayout();
        layout.next(CardSequenceForFlightJPanel);
        
    }//GEN-LAST:event_btnNewFlightActionPerformed

    private void btnViewFlightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFlightActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblAirplane.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "To view the detail please select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        else{
            Airplane airplane = (Airplane)tblAirplane.getValueAt(selectedRow, 0);
            
            ViewFlightDetailJPanel panel = new ViewFlightDetailJPanel(CardSequenceForFlightJPanel, airplane);
            CardSequenceForFlightJPanel.add("ViewFlightDetailJPanel", panel);
            CardLayout layout = (CardLayout) CardSequenceForFlightJPanel.getLayout();
            layout.next(CardSequenceForFlightJPanel);
        }
    }//GEN-LAST:event_btnViewFlightActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        CardSequenceJPanel.remove(this);
        CardLayout layout = (CardLayout) CardSequenceJPanel.getLayout();
        layout.previous(CardSequenceJPanel);
        
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnManageFlightsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnManageFlightsActionPerformed
        // TODO add your handling code here:
        String airlinerName = txtAirlinerName.getText();
        for(Airliner airliner : airlinerDirectory.getAirlinerDirectory() ){
            if (airliner.getName().equals(airlinerName)){
                
                populateAirplaneTable(airliner);
            }
        }
    }//GEN-LAST:event_btnManageFlightsActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AbsoluteLayoutJPanel;
    private javax.swing.JPanel CardSequenceForFlightJPanel;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnManageFlights;
    private javax.swing.JButton btnNewFlight;
    private javax.swing.JButton btnViewFlight;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTable tblAirplane;
    private javax.swing.JTextField txtAirlinerName;
    // End of variables declaration//GEN-END:variables
}
